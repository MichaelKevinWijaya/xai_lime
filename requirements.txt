pandas
numpy
lime==0.2.0.1
matplotlib
seaborn
nltk
spacy
plotly
wordcloud
scikit-learn
textblob
statsmodels

coefficients = logreg_model.coef_.ravel()
feature_names = list(x.columns)
sorted_indices = np.argsort(np.abs(coefficients))[::-1] # Reverse order for descending sort
sorted_coefficients = coefficients[sorted_indices]
sorted_feature_names = [feature_names[i] for i in sorted_indices]
sorted_data = pd.DataFrame({'feature': sorted_feature_names, 'coefficient': sorted_coefficients})
colors = ['royalblue' if coef < 0 else 'darkorange' for coef in sorted_coefficients]

# Create the horizontal bar plot using plotly
trace = go.Bar(
    x=sorted_data['coefficient'],
    y=sorted_data['feature'],
    orientation='h',
    marker=dict(color=colors),  # Use emerald-like color
    hoverinfo='x+y'  # Display both values on hover
)

# Customize layout
layout = go.Layout(
    title='Logistic Regression Global Explanation: Coefficient Magnitudes',
    titlefont=dict(color='black'),
    xaxis=dict(
        title='Coefficient Magnitude',
        titlefont=dict(color='black'),  # Set x-axis title font color
        tickfont=dict(color='black')  # Set x-axis tick labels color
    ),
    yaxis=dict(
        title='Feature Name',
        titlefont=dict(color='black'),  # Set y-axis title font color
        tickfont=dict(color='black'),  # Set y-axis tick labels color
        autorange="reversed"
    ),
    hovermode='closest',
    plot_bgcolor='rgba(255, 255, 255, 1)',
    paper_bgcolor='rgba(255, 255, 255, 1)',
    title_x=0.15,  # Invert y-axis for top-down display
)